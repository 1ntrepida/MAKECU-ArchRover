#include "MotorDriver.h"

#include <NewPing.h>
 
#define TRIGGER_PIN  7
#define ECHO_PIN     6
#define MAX_DISTANCE 200
#define SPEED .02186 //cm per millisecond
 
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);

unsigned long beginningTime;

float x;
float y;
int angle;

boolean returned;

void setup() {
  
  motordriver.init();
  motordriver.setSpeed(200,MOTORB);
  motordriver.setSpeed(200,MOTORA);
  
  Serial.begin(9600);

  beginningTime = millis();

  x = 0;
  y = 0;
  angle = 0;

  returned = false;
}
 
void loop() {

  while (1)
  {
    motordriver.goForward();
    delay(50); // Wait 50ms between pings (about 20 pings/sec)
    
    unsigned int distance = sonar.ping()/US_ROUNDTRIP_CM; // Send ping, get ping time in microseconds
  
    if(distance <= 20)
    {
        //print out distance traveled
        unsigned long endTime = millis();
        unsigned long timeDifference = endTime - beginningTime;
        unsigned float distanceTraveled = timeDifference * SPEED;
        Serial.println(distanceTraveled);
  
        if (angle % 360 == 0)
        {
          y = y + distanceTraveled;
        }
        else if (angle % 360 == 90)
        {
          x = x + distanceTraveled;
        }
        else if (angle % 360 == 180)
        {
          y = y - distanceTraveled;
        }
        else
        {
          x = x - distanceTraveled;
        }
  
        if (x < 20) && (y < 20)
        {
          break;
        }
        
        //Stop and turn right approx. 90 degrees
        motordriver.stop();
        delay(1000);  
        motordriver.goRight(); 
        delay(1775);
        angle = angle + 90;
        motordriver.stop();
        delay(1000);
  
        //check to see if there is a wall on the right
        unsigned int distance = sonar.ping()/US_ROUNDTRIP_CM; // Send ping, get ping time in microseconds
        if (distance <= 20)
        {
          motordriver.goLeft();
          delay(3550);
          angle = angle + 180;
          motordriver.stop();
          delay(1000);
          //check to see if there is a wall on the left
          if (distance <=20)
          {
            motordriver.goLeft();
            delay(1775);
            angle = angle + 240;
            motordriver.stop();
            delay(1000);
          }
        }
        //reset beginning time
        beginningTime = millis();
    }
    motordriver.stop();
  }
}
